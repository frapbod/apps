name: "Charts: Release"

concurrency: helm-release

on:
  workflow_dispatch:
  push:
    branches:
      - master
    paths:
      - "charts/**"

jobs:
  release:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/truecharts/devcontainer:v2.2.1@sha256:4ace13c049bf00f85c63e0070f86b71656a7c3b2113aa3e21c3107f3d1f7bf87
    concurrency: gitpush
    steps:
      - name: Install Kubernetes tools
        uses: yokawasa/action-setup-kube-tools@c81bf94cddd6c3172e6f61aa7f5ad66a2b5db98d # tag=v0.8.0
        with:
          setup-tools: |
            helmv3
          helm: "3.8.0"

      - name: Install helm-docs
        run: |
          wget -O /tmp/helm-docs.deb  https://github.com/k8s-at-home/helm-docs/releases/download/v0.1.1/helm-docs_0.1.1_Linux_x86_64.deb
          sudo dpkg -i /tmp/helm-docs.deb

      - name: Prep Helm
        run: |
          helm repo add truecharts-old https://truecharts.org
          helm repo add truecharts https://charts.truecharts.org
          helm repo add truecharts-library https://library-charts.truecharts.org
          helm repo add bitnami https://charts.bitnami.com/bitnami
          helm repo add metallb https://metallb.github.io/metallb
          helm repo add grafana https://grafana.github.io/helm-charts
          helm repo add prometheus https://prometheus-community.github.io/helm-charts
          helm repo add amd-gpu-helm https://radeonopencompute.github.io/k8s-device-plugin/
          helm repo update

      - name: Checkout
        uses: actions/checkout@a12a3943b4bdde767164f792f33f40b04645d846 # tag=v3
        with:
          token: ${{ secrets.BOT_TOKEN }}
          fetch-depth: 0

      - name: Collect changes
        id: collect-changes
        uses: ./.github/actions/collect-changes

      - name: Generate README for changed charts
        shell: bash
        if: |
          steps.collect-changes.outputs.changesDetectedAfterTag == 'true'
        run: |
          CHARTS=(${{ steps.collect-changes.outputs.modifiedChartsAfterTag }})
          parthreads=$(($(nproc) * 2))
          parallel -j ${parthreads} .github/scripts/gen-docs.sh '2>&1' ::: ${CHARTS[@]}


      - name: Fix Pre-Commit issues
        shell: bash
        if: |
          steps.collect-changes.outputs.changesDetectedAfterTag == 'true'
        run: |
          echo "Running pre-commit test-and-cleanup..."
          pre-commit run --all ||:
          # Fix sh files to always be executable
          find . -name '*.sh' | xargs chmod +x

      - name: build catalogs
        shell: bash
        if: |
          steps.collect-changes.outputs.changesDetectedAfterTag == 'true'
        run: |
          pip install yq
          CHARTS=(${{ steps.collect-changes.outputs.modifiedChartsAfterTag }})
          parthreads=$(($(nproc) * 2))
          parallel -j ${parthreads} .github/scripts/build-catalog.sh '2>&1' ::: ${CHARTS[@]}


      - name: Generate docker-hub Catalog
        shell: bash
        if: |
          steps.collect-changes.outputs.changesDetectedAfterTag == 'true'
        run: |
          rm -rf dh_catalog/*.*
          rm -rf dh_catalog/*
          cp -rf catalog/* dh_catalog
          cd dh_catalog
          find ./ -type f -name *.yaml -exec sed -i 's/tccr.io/dh.tccr.io/gI' {} \;
          cd -

      - name: Validate catalogs
        if: |
          steps.collect-changes.outputs.changesDetectedAfterTag == 'true'
        run: |
          echo "Starting Catalog Validation"
          /usr/local/bin/catalog_validate validate --path "${PWD}/catalog"


      - name: Checkout
        uses: actions/checkout@a12a3943b4bdde767164f792f33f40b04645d846 # tag=v3
        if: |
          steps.collect-changes.outputs.changesDetectedAfterTag == 'true'
        with:
          token: ${{ secrets.BOT_TOKEN }}
          ref: ${{ steps.save-commit-hash.outputs.commit_hash }}
          fetch-depth: 0
